import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { SessionWrapper } from "@/components/SessionWrapper";
import { ThemeProvider } from "@/components/ThemeProvider";

/**
 * Root Layout with Theme Support
 * 
 * The application has been enhanced with a theme system:
 * - ThemeProvider wraps the application to provide theme context
 * - Supports light and dark modes with seamless switching
 * - Theme preference is persisted in localStorage
 * - System color scheme preference is respected on first visit
 * - All UI components adapt to the current theme using CSS variables
 */


const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <SessionWrapper>
        <ThemeProvider>
          <body
            className={`${geistSans.variable} ${geistMono.variable} antialiased`}
          >
            {children}
          </body>
        </ThemeProvider>
      </SessionWrapper>
    </html>
  );
}
